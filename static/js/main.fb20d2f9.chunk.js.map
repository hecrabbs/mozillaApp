{"version":3,"sources":["JuxtaPollsLogo512.png","fonts/GothicA1-Regular.ttf","NewsApi.js","FECApi.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","searchArticles","name","req","fetch","then","response","json","NewsResults","props","style","width","className","results","map","article","Card","key","url","Body","Img","variant","src","urlToImage","Title","Link","href","target","title","Text","description","fetchFECData","idArray","mostRecentId","committeeID","findMostRecentId","urls","id","Promise","all","ok","fetchArrayOfIds","length","Error","result","mostRecentDateIndex","object","active_through","indexOf","fetchMostRecentCommittee","committee_id","fetchCandidateData","FECResults","candidateInfo","data","candidateTotals","topContributions","topIndividualContributions","useState","openContributions","setOpenContributions","openIndivContributions","setOpenIndivContributions","party_full","candidate_id","address_street_1","address_city","address_state","Date","coverage_start_date","replace","toDateString","coverage_end_date","disbursements","receipts","committee","Button","onClick","aria-controls","aria-expanded","Collapse","in","contributor","sub_id","contributor_name","contribution_receipt_amount","contributor_occupation","App","firstCandidateData","setFirstCandidateData","firstNewsResults","setFirstNewsResults","firstSubmitted","setFirstSubmitted","firstLoaded","setFirstLoaded","message","exists","firstError","setFirstError","secondCandidateData","setSecondCandidateData","secondNewsResults","setSecondNewsResults","secondSubmitted","setSecondSubmitted","secondLoaded","setSecondLoaded","secondError","setSecondError","SearchBar","input","setInput","handleInputChange","e","currentTarget","value","Form","onSubmit","preventDefault","firstCandidateName","articles","catch","console","log","toString","secondCandidateName","Row","Col","xs","sm","md","Group","controlId","Control","type","placeholder","onChange","block","FirstTabResults","textAlign","SecondTabResults","Container","fluid","alt","require","height","color","size","offset","Tabs","defaultActiveKey","Tab","eventKey","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.fb20d2f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JuxtaPollsLogo512.a3184c3d.png\";","module.exports = __webpack_public_path__ + \"static/media/GothicA1-Regular.e742f688.ttf\";","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\n\r\nconst API_KEY = `&apiKey=bbdaee4b911644a796017954f3f1362a`;\r\nconst URL = `https://newsapi.org/v2/everything?sortBy=relevancy&q=`;\r\n\r\nfunction searchArticles(name) {\r\n  let req = `${URL}${name}${API_KEY}`;\r\n  if (name) {\r\n    return fetch(req).then(response => {\r\n      return response.json();\r\n    });\r\n  }\r\n}\r\n\r\nfunction NewsResults(props) {\r\n  const style = {\r\n    width: 150\r\n  };\r\n  return (\r\n    <div className=\"newsResults\">\r\n      <b>News:</b> <br /><br />\r\n      {props.results && props.results.map(article => (\r\n        <Card key={article.url}>\r\n          <Card.Body>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              style={style}\r\n              src={article.urlToImage}\r\n            />\r\n            <Card.Title>\r\n              <Card.Link href={article.url} target=\"_blank\">\r\n                {article.title}\r\n              </Card.Link>\r\n            </Card.Title>\r\n            <Card.Text>{article.description}</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { searchArticles };\r\nexport default NewsResults;\r\n","import React, { useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Style.css';\r\nimport Collapse from \"react-bootstrap/Collapse\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction fetchFECData(name) {\r\n\r\n    //Make sure to handle all errors!!!!\r\n\r\n    const key = `SVuK6wlixoKEc7Ccdd7X2paVLHTAjGjJUZdlzAMp`\r\n\r\n    let idArray;\r\n    let mostRecentId;\r\n    let committeeID;\r\n\r\n    function fetchArrayOfIds(name) {\r\n        const url = `https://api.open.fec.gov/v1/names/candidates/?q=${name}&api_key=${key}`\r\n        return (fetch(url)\r\n            .then(response => {\r\n                if (!response.ok) { throw response }\r\n                return response.json()\r\n            })\r\n        )\r\n    }\r\n\r\n    function findMostRecentId(idArray) {\r\n        const url = (id) => {\r\n            return `https://api.open.fec.gov/v1/candidate/${id}/?sort_nulls_last=false&sort_null_only=false&per_page=20&page=1&sort=name&api_key=${key}&sort_hide_null=false`\r\n        }\r\n        let urls = idArray.map(id => url(id));\r\n        return (Promise.all(urls.map(url => fetch(url)\r\n            .then(response => {\r\n                if (!response.ok) { throw response }\r\n                return response.json()\r\n            })\r\n        )))\r\n    }\r\n\r\n    function fetchMostRecentCommittee(mostRecentId) {\r\n        const url = `https://api.open.fec.gov/v1/candidate/${mostRecentId}/committees/?sort=-last_file_date&sort_hide_null=false&committee_type=P&sort_nulls_last=false&per_page=20&sort_null_only=false&cycle=2020&page=1&api_key=${key}`\r\n        return (fetch(url)\r\n            .then(response => {\r\n                if (!response.ok) { throw response }\r\n                return response.json()\r\n            })\r\n        )\r\n    }\r\n\r\n    function fetchCandidateData(mostRecentId, committeeID) {\r\n        const urls = [\r\n            `https://api.open.fec.gov/v1/candidate/${mostRecentId}/?sort_nulls_last=false&sort_null_only=false&per_page=20&page=1&sort=name&api_key=${key}&sort_hide_null=false`,\r\n            `https://api.open.fec.gov/v1/candidate/${mostRecentId}/totals/?sort=-cycle&sort_nulls_last=true&sort_null_only=false&per_page=20&cycle=2020&election_full=false&page=1&api_key=${key}`,\r\n            `https://api.open.fec.gov/v1/schedules/schedule_a/?is_individual=false&sort_hide_null=false&sort_null_only=false&sort=-contribution_receipt_amount&api_key=${key}&committee_id=${committeeID}&per_page=10`,\r\n            `https://api.open.fec.gov/v1/schedules/schedule_a/?is_individual=true&sort_hide_null=false&sort_null_only=false&sort=-contribution_receipt_amount&api_key=${key}&committee_id=${committeeID}&per_page=10`,\r\n        ]\r\n        return (Promise.all(urls.map(url => fetch(url)\r\n            .then(response => {\r\n                if (!response.ok) { throw response }\r\n                return response.json()\r\n            })\r\n        )))\r\n    }\r\n\r\n    return fetchArrayOfIds(name)\r\n        .then(json => {\r\n            let results = json.results;\r\n            if (results.length === 0) {\r\n                throw Error(\"Invalid Entry\");\r\n            } else {\r\n                idArray = results.map(result => result.id);\r\n            }\r\n            return findMostRecentId(idArray);\r\n        }).then(json => {\r\n            let activeThroughDates = json.map(object => object.results[0].active_through);\r\n            let mostRecentDateIndex = activeThroughDates.indexOf(2020);\r\n            mostRecentId = idArray[mostRecentDateIndex];\r\n            return fetchMostRecentCommittee(mostRecentId);\r\n        }).then(json => {\r\n            if (json.results.length === 0) {\r\n                throw Error(\"Not a Presidential Candidate\");\r\n            }\r\n            committeeID = json.results[0].committee_id;\r\n\r\n        }).then(() => {\r\n            return fetchCandidateData(mostRecentId, committeeID);\r\n        });\r\n}\r\n\r\nfunction FECResults(props) {\r\n\r\n    const candidateInfo = props.data[0].results[0];\r\n    const candidateTotals = props.data[1].results[0];\r\n    const topContributions = props.data[2].results;\r\n    const topIndividualContributions = props.data[3].results;\r\n\r\n    const [openContributions, setOpenContributions] = useState(false);\r\n    const [openIndivContributions, setOpenIndivContributions] = useState(false);\r\n\r\n    return (\r\n        <div className=\"Content\">\r\n            <b>{candidateInfo.party_full}</b> <br /> <br />\r\n            <b>Candidate ID: </b>{candidateInfo.candidate_id} <br />\r\n            <b>Active Through:</b> {candidateInfo.active_through} <br />\r\n            <b>Address:</b> {candidateInfo.address_street_1} <br />\r\n            <b>City:</b> {candidateInfo.address_city} <br />\r\n            <b>State:</b> {candidateInfo.address_state} <br /><br />\r\n            <b>Coverage Date:</b> {new Date(candidateTotals.coverage_start_date.replace(/-/g, '/').replace(/T.+/, '')).toDateString()} - {new Date(candidateTotals.coverage_end_date.replace(/-/g, '/').replace(/T.+/, '')).toDateString()}<br />\r\n            <b>Disbursements:</b> ${candidateTotals.disbursements} <br />\r\n            <b>Receipts:</b> ${candidateTotals.receipts} <br /><br />\r\n            <b>Presidential Committee:</b> {topContributions[0].committee.name} <br /> <br />\r\n            <Button onClick={() => setOpenContributions(!openContributions)}\r\n                aria-controls=\"top-contributions\"\r\n                aria-expanded={openContributions}>\r\n                <b>Top Contributions:</b>\r\n            </Button>\r\n            <Collapse in={openContributions}>\r\n                <div id=\"top-contributions\">\r\n                    <br />{topContributions.map(contributor => (\r\n                        <li key={contributor.sub_id}>{contributor.contributor_name}: ${contributor.contribution_receipt_amount}<br />{contributor.contributor_occupation}</li>\r\n                    ))}\r\n                </div>\r\n            </Collapse>\r\n            <br /> <br />\r\n            <Button onClick={() => setOpenIndivContributions(!openIndivContributions)}\r\n                aria-controls=\"top-individual-contributions\"\r\n                aria-expanded={openIndivContributions}>\r\n                <b>Top Individual Contributions:</b>\r\n            </Button>\r\n            <Collapse in={openIndivContributions}>\r\n                <div id=\"top-individual-contributions\">\r\n                    <br />{topIndividualContributions.map(contributor => (\r\n                        <li key={contributor.sub_id}>{contributor.contributor_name}: ${contributor.contribution_receipt_amount}<br />{contributor.contributor_occupation}</li>\r\n                    ))}\r\n                </div>\r\n            </Collapse>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport { fetchFECData };\r\nexport default FECResults;","import React, { useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {\r\n  BrowserView,\r\n  MobileView,\r\n  // isBrowser,\r\n  // isMobile\r\n} from \"react-device-detect\";\r\n\r\nimport { searchArticles } from \"./NewsApi\";\r\nimport NewsResults from \"./NewsApi\";\r\nimport { fetchFECData } from \"./FECApi\";\r\nimport FECResults from \"./FECApi\";\r\n// import TwitterContainer from \"./TwitterConainer\";\r\nimport './Style.css';\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  const [firstCandidateData, setFirstCandidateData] = useState([]);\r\n  const [firstNewsResults, setFirstNewsResults] = useState([]);\r\n  const [firstSubmitted, setFirstSubmitted] = useState(false);\r\n  const [firstLoaded, setFirstLoaded] = useState(false);\r\n  const [firstError, setFirstError] = useState({ message: \"NO ERROR\", exists: false });\r\n\r\n  const [secondCandidateData, setSecondCandidateData] = useState([]);\r\n  const [secondNewsResults, setSecondNewsResults] = useState([]);\r\n  const [secondSubmitted, setSecondSubmitted] = useState(false);\r\n  const [secondLoaded, setSecondLoaded] = useState(false);\r\n  const [secondError, setSecondError] = useState({ message: \"NO ERROR\", exists: false });\r\n\r\n  function SearchBar(props) {\r\n    const [input, setInput] = useState({});\r\n\r\n    const handleInputChange = (e) => setInput({\r\n      ...input,\r\n      [e.currentTarget.name]: e.currentTarget.value\r\n    })\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (e.currentTarget.firstCandidateName.value !== \"\") {\r\n        setFirstLoaded(false);\r\n        setFirstSubmitted(true);\r\n        setFirstError(firstError => ({ ...firstError, exists: false }));\r\n        searchArticles(e.currentTarget.firstCandidateName.value).then(response => {\r\n          setFirstNewsResults(response.articles)\r\n        });\r\n        fetchFECData(e.currentTarget.firstCandidateName.value).then(response => {\r\n          setFirstCandidateData(response);\r\n          setFirstLoaded(true);\r\n        }).catch(e => {\r\n          console.log(e);\r\n          setFirstError(firstError => ({ message: e.toString(), exists: true }));\r\n        });\r\n      }\r\n\r\n      if (e.currentTarget.secondCandidateName.value !== \"\") {\r\n        setSecondLoaded(false);\r\n        setSecondSubmitted(true);\r\n        setSecondError(secondError => ({ ...secondError, exists: false }));\r\n        searchArticles(e.currentTarget.secondCandidateName.value).then(response => {\r\n          setSecondNewsResults(response.articles)\r\n        });\r\n        fetchFECData(e.currentTarget.secondCandidateName.value).then(response => {\r\n          setSecondCandidateData(response);\r\n          setSecondLoaded(true);\r\n        }).catch(e => {\r\n          console.log(e);\r\n          setSecondError(secondError => ({ message: e.toString(), exists: true }));\r\n        });\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Form onSubmit={handleSubmit} >\r\n        <Form.Row>\r\n          <Col xs={6} sm={6} md={6}>\r\n            <Form.Group controlId=\"firstCandidate\" className=\"Form\">\r\n              <Form.Control type=\"text\" name=\"firstCandidateName\" placeholder=\"First Candidate Name\" onChange={handleInputChange} />\r\n            </Form.Group></Col>\r\n          <Col xs={6} sm={6} md={6}>\r\n            <Form.Group controlId=\"secondCandidate\" className=\"Form\">\r\n              <Form.Control type=\"text\" name=\"secondCandidateName\" placeholder=\"Second Candidate Name\" onChange={handleInputChange} />\r\n            </Form.Group></Col>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Col><Button type=\"submit\" className=\"Button\" block>Submit</Button></Col></Form.Row>\r\n      </Form>\r\n    )\r\n  }\r\n\r\n  function FirstTabResults(props) {\r\n    if (firstSubmitted) {\r\n      if (firstError.exists) {\r\n        return (\r\n          <div className=\"Content\">{firstError.message} <br />\r\n            <ul>\r\n              <li>Make sure the name entered is a presidential candidate</li>\r\n              <li>Try using the candidate's full name</li>\r\n              <li>Double check the name was spelled correctly</li>\r\n            </ul>\r\n          </div>\r\n        )\r\n      } else if (firstLoaded) {\r\n        return (\r\n          <div> <FECResults data={firstCandidateData} /> <br />\r\n            <NewsResults results={firstNewsResults} /></div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div>LOADING...</div>\r\n        )\r\n      }\r\n    } else {\r\n      return (\r\n        <div className=\"Content\" style={{ textAlign: 'center' }}>Search For a Candidate Above.</div>\r\n      )\r\n    }\r\n  }\r\n\r\n  function SecondTabResults(props) {\r\n    if (secondSubmitted) {\r\n      if (secondError.exists) {\r\n        return (\r\n          <div className=\"Content\">{secondError.message}</div>\r\n        )\r\n      } else if (secondLoaded) {\r\n        return (\r\n          <div> <FECResults data={secondCandidateData} /> <br />\r\n            <NewsResults results={secondNewsResults} /></div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div>LOADING...</div>\r\n        )\r\n      }\r\n    } else {\r\n      return (\r\n        <div className=\"Content\" style={{ textAlign: 'center' }}>Search For a Candidate Above.</div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserView>\r\n        <Container fluid className=\"Header\" >\r\n          <Row>\r\n            <Col sm={12} md={6} className=\"CenterVertically\">\r\n              <Row >\r\n                <img alt=\"Logo\" src={require(\"./JuxtaPollsLogo512.png\")} width=\"50\" height=\"50\" /> {' '}\r\n                <strong className=\"Title\"><span style={{ color: 'blue' }}>JUXTA</span><span style={{ color: 'red' }}>POLLS</span></strong>\r\n              </Row>\r\n              <Row ><span>QUICKLY SEARCH AND COMPARE <b><i>THE FACTS</i></b> BETWEEN POLITICAL CANDIDATES</span>\r\n              </Row>\r\n            </Col>\r\n            <Col sm={12} md={{ size: 5, offset: 1 }} ><SearchBar /></Col>\r\n          </Row>\r\n        </Container>\r\n        <Container fluid>\r\n          <Row >\r\n            <Col md={6} xs={6} className=\"verticalLineRight\">\r\n              <h3 className=\"BrowserTabs\">{(() => {\r\n                if (firstLoaded) {\r\n                  return firstCandidateData[0].results[0].name;\r\n                } else {\r\n                  return \"First Candidate:\";\r\n                }\r\n              })()}</h3>\r\n              <FirstTabResults /></Col>\r\n            <Col md={6} xs={6} className=\"verticalLineLeft\">\r\n              <h3 className=\"BrowserTabs\">{(() => {\r\n                if (secondLoaded) {\r\n                  return secondCandidateData[0].results[0].name;\r\n                } else {\r\n                  return \"Second Candidate:\";\r\n                }\r\n              })()}</h3>\r\n              <SecondTabResults /></Col>\r\n          </Row>\r\n        </Container>\r\n      </BrowserView>\r\n\r\n      <MobileView>\r\n        <Container fluid className=\"Header\" >\r\n          <Row>\r\n            <Col sm={12} md={6} className=\"CenterVertically\">\r\n              <Row >\r\n                <img alt=\"Logo\" src={require(\"./JuxtaPollsLogo512.png\")} width=\"50\" height=\"50\" /> {' '}\r\n                <strong className=\"Title\"><span style={{ color: 'blue' }}>JUXTA</span><span style={{ color: 'red' }}>POLLS</span></strong>\r\n              </Row>\r\n              <Row ><span>QUICKLY SEARCH AND COMPARE <b><i>THE FACTS</i></b> BETWEEN POLITICAL CANDIDATES</span>\r\n              </Row>\r\n            </Col>\r\n            <Col sm={12} md={{ size: 10, offset: 1 }} ><SearchBar /></Col>\r\n          </Row>\r\n        </Container>\r\n        <Container fluid>\r\n          <Row ><Col sm={12} md={{ size: 11, offset: 1 }}>\r\n            <Tabs defaultActiveKey=\"firstCandidate\" className=\"StickyTabs\" >\r\n              <Tab eventKey=\"firstCandidate\" title={(() => {\r\n                if (firstLoaded) {\r\n                  return <b>{firstCandidateData[0].results[0].name}</b>;\r\n                } else {\r\n                  return \"First Candidate\";\r\n                }\r\n              })()}>\r\n                <FirstTabResults />\r\n              </Tab>\r\n              <Tab eventKey=\"secondCandidate\" title={(() => {\r\n                if (secondLoaded) {\r\n                  return <b>{secondCandidateData[0].results[0].name}</b>;\r\n                } else {\r\n                  return \"Second Candidate\";\r\n                }\r\n              })()}>\r\n                <SecondTabResults />\r\n              </Tab>\r\n              {/* <Tab eventKey=\"twitter\" title=\"Twitter Test\">\r\n                    <TwitterContainer />\r\n                  </Tab> */}\r\n            </Tabs>\r\n          </Col>\r\n            <Col sm=\"12\" md={1}></Col>\r\n          </Row>\r\n        </Container>\r\n      </MobileView>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './fonts/GothicA1-Regular.ttf'\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}